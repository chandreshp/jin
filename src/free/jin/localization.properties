# Default localization for the free.jin package


ConnectionManager.unknownServerParam.title = Login Parameters Error
# {0} is the server id passed as an argument to the program
ConnectionManager.unknownServerParam.message = Unknown server ID: {0}

ConnectionManager.loginErrorDialog.title = Login Error
# {0} is the actual message for the login error
ConnectionManager.loginErrorDialog.message = Error logging in:\n{0}

ConnectionManager$ReconnectDialogPanel.title = Disconnected
# {0} is the long server name.
# {1} is the username.
# {2} is the hostname.
# {3} is the port number.
ConnectionManager$ReconnectDialogPanel.message = You were disconnected from {0}\n({1} at {2}:{3}).
ConnectionManager$ReconnectDialogPanel.reconnectButton.text = Reconnect
# {0} is the application name
ConnectionManager$ReconnectDialogPanel.quitButton.text = Quit {0}



Jin.quitConfirmationDialog.title = Quit
# {0} is the application name
Jin.quitConfirmationDialog.message = Quit {0}?


JinApplet.passwordSaveWarning = \
  Your password will be stored on the server and transferred to the applet\n\
  as plain text - anyone with access to a router or proxy between your\n\
  computer and the server will be able to view your password.\n\
  Are you sure you want your password saved?

# {0} is the application name
JinApplet.errorLabel.text = An error has occurred:
JinApplet.instructionsLabel.text = Enter your screen name and password or continue as guest
JinApplet.usernameLabel.text = Screen Name: 
JinApplet.passwordLabel.text = Password: 
JinApplet.loginButton.text = Login
JinApplet.loginAsGuestButton.text = Login as Guest
JinApplet.usernameUnspecifiedError = Please specify a screen name
JinApplet.passwordUnspecifiedError = Please specify the password
JinApplet.startingStatus = Starting {0}
JinApplet.stayOnPageStatus = Do not leave this page while {0} is running!
JinApplet.connectingStatus = Connecting
JinApplet.authenticatingStatus = Authenticating
JinApplet.retrievingPreferencesStatus = Retrieving preferences

JinApplet.prefsUploadDialog.title = {0} Settings Upload
JinApplet.prefsUploadDialog.message = Your {0} settings are being uploaded to the server, please wait.
JinApplet.prefsUploadDialog.cancelButton.text = Cancel

JinApplet.prefsUploadErrorDialog.title = {0} Settings Upload Error
JinApplet.prefsUploadErrorDialog.message = An error has occurred while uploading your {0} settings:
JinApplet.prefsUploadErrorDialog.closeButton.text = Close

JinApplet.passwordPrefsUploadErrorDialog.title = {0} Settings Upload Error
JinApplet.passwordPrefsUploadErrorDialog.message = An error has occurred while uploading your {0} settings:
JinApplet.passwordPrefsUploadErrorDialog.retryButton.text = Retry
JinApplet.passwordPrefsUploadErrorDialog.closeButton.text = Close



JinApplication.passwordSaveWarning = \
  Your password will be stored in your home directory, on your computer,\n\
  as plain text. If there are other people using this computer, they may\n\
  be able to obtain this password.\n\
  Are you sure you want to save your password?

JinApplication.savingPrefsErrorDialog.title = Saving Preferences Error
# {0} is the name of the file
JinApplication.savingPrefsErrorDialog.securityManagerWriteError = The security manager doesn't allow writing:\n{0}
JinApplication.savingPrefsErrorDialog.ioError = I/O error writing preferences to file:\n{0}


JinApplication.savingAccountErrorDialog.title = Saving Account Error
# {0} is the name of the file/dir
JinApplication.savingAccountErrorDialog.unableToCreateDirError = Unable to create directory:\n{0}
JinApplication.savingAccountErrorDialog.securityManagerDirCreateError = Security manager doesn't allow creating directory:\n{0}
JinApplication.savingAccountErrorDialog.ioErrorStoringProps = I/O error writing user properties to file:\n{0}
JinApplication.savingAccountErrorDialog.securityManagerErrorStoringProps = Security manager doesn't allow writing to file:\n{0}
JinApplication.savingAccountErrorDialog.ioErrorStoringPrefs = I/O error writing user preferences to file:\n{0}
JinApplication.savingAccountErrorDialog.securityManagerErrorStoringPrefs = Security manager doesn't allow writing to file:\n{0}
JinApplication.savingAccountErrorDialog.ioErrorStoringUserFiles = I/O error writing user files to file:\n{0}
JinApplication.savingAccountErrorDialog.securityManagerErrorStoringUserFiles = Security manager doesn't allow writing to file:\n{0}


Game.result.whiteWins = \ (1-0)
Game.result.blackWins = \ (0-1)
Game.result.draw = \ (\u00BD-\u00BD)
Game.result.unknown =
Game.result.inProgress =

# {0} is the opponent
Game.playingShortDescription = Playing vs. {0}

# {0} is the name+titles of the white player
# {1} is the name+titles of the black player
# {2} is the result string
Game.examiningShortDescription = Examining {0} vs. {1}{2}
Game.examinationShortDescription = Examination Board{2}
Game.observingShortDescription = {0} vs. {1}{2}


# {0} is the name of the white player
# {1} is the name of the black player
Game.gameEndReason.whiteWins = {0} wins.
Game.gameEndReason.blackWins = {1} wins.
Game.gameEndReason.draw = Game ends in draw.
Game.gameEndReason.unknown = Game ends.

Game.gameEndReason.whiteWins.resigns = {1} resigns. {0} wins.
Game.gameEndReason.blackWins.resigns = {0} resigns. {1} wins.
Game.gameEndReason.whiteWins.checkmated = {1} checkmated. {0} wins.
Game.gameEndReason.blackWins.checkmated = {0} checkmated. {1} wins.
Game.gameEndReason.whiteWins.timeForfeits = {1} runs out of time and forfeits. {0} wins.
Game.gameEndReason.blackWins.timeForfeits = {0} runs out of time and forfeits. {1} wins.
Game.gameEndReason.whiteWins.adjudicated = Game adjudicated against {1}. {0} wins.
Game.gameEndReason.blackWins.adjudicated = Game adjudicated against {0}. {1} wins.
Game.gameEndReason.whiteWins.disconnected = {1} disconnected and forfeits. {0} wins.
Game.gameEndReason.blackWins.disconnected = {0} disconnected and forfeits. {1} wins.
Game.gameEndReason.whiteWins.partnerResigns = {1}'s partner resigns. {0} wins.
Game.gameEndReason.blackWins.partnerResigns = {0}'s partner resigns. {1} wins.
Game.gameEndReason.whiteWins.partnerCheckmated = {1}'s partner checkmated. {0} wins.
Game.gameEndReason.blackWins.partnerCheckmated = {0}'s partner checkmated. {1} wins.
Game.gameEndReason.whiteWins.partnerTimeForfeits = {1}'s partner runs out of time and forfeits. {0} wins.
Game.gameEndReason.blackWins.partnerTimeForfeits = {0}'s partner runs out of time and forfeits. {1} wins.
Game.gameEndReason.whiteWins.partnerDisconnected = {1}'s partner disconnected and forfeits. {0} wins.
Game.gameEndReason.blackWins.partnerDisconnected = {0}'s partner disconnected and forfeits. {1} wins.

Game.gameEndReason.draw.drawAgreement = Game drawn by mutual agreement.
Game.gameEndReason.draw.stalemate = Game stalemated. Draw.
Game.gameEndReason.draw.stalemate.white = {0} stalemated. Draw.
Game.gameEndReason.draw.stalemate.black = {1} stalemated. Draw.
Game.gameEndReason.draw.repetition = Game drawn by 3-fold repetition.
Game.gameEndReason.draw.repetition.white = {0} claims draw by 3-fold repetition. Draw.
Game.gameEndReason.draw.repetition.black = {1} claims draw by 3-fold repetition. Draw.
Game.gameEndReason.draw.50move = Game drawn by 50-move rule.
Game.gameEndReason.draw.50move.white = {0} claims draw by 50-move rule. Draw.
Game.gameEndReason.draw.50move.black = {1} claims draw by 50-move rule. Draw.
Game.gameEndReason.draw.outOfTimeAndOppHasNoMaterial= One of the players runs out of of time and the other has not enough material to mate. Draw.
Game.gameEndReason.draw.outOfTimeAndOppHasNoMaterial.white = {0} runs out of time and {1} has no material to mate. Draw.
Game.gameEndReason.draw.outOfTimeAndOppHasNoMaterial.black = {1} runs out of time and {0} has no material to mate. Draw.
Game.gameEndReason.draw.bothNoMaterial = Neither player has enough material to mate. Draw.
Game.gameEndReason.draw.bothOutOfTime = Both players run out of time. Draw.
Game.gameEndReason.draw.partnerDrawAgreement = Partner's game drawn by mutual agreement. Draw.
Game.gameEndReason.draw.partnerBothOutOfTime = Partner's game drawn because both players ran out of time. Draw.

Game.gameEndReason.unknown.adjournedAgreement = Game adjourned by mutual agreement.
Game.gameEndReason.unknown.adjournedDisconnected = Game adjourned when one of the players disconnected.
Game.gameEndReason.unknown.adjournedDisconnected.white = Game adjourned when {0} disconnected.
Game.gameEndReason.unknown.adjournedDisconnected.black = Game adjourned when {1} disconnected.
Game.gameEndReason.unknown.adjournedCourtesy = Game courtesy-adjourned.
Game.gameEndReason.unknown.adjournedCourtesy.white = Game courtesy-adjourned by {0}.
Game.gameEndReason.unknown.adjournedCourtesy.black = Game courtesy-adjourned by {1}.
Game.gameEndReason.unknown.adjournedAdmin = Game adjourned by an administrator.

Game.gameEndReason.unknown.abortedAgreement = Game aborted by mutual agreement.
Game.gameEndReason.unknown.abortedDisconnected = Game aborted when one of the players disconnected.
Game.gameEndReason.unknown.abortedDisconnected.white = Game aborted when {0} disconnected.
Game.gameEndReason.unknown.abortedDisconnected.black = Game aborted when {1} disconnected.
Game.gameEndReason.unknown.abortedCourtesy = Game courtesy-aborted.
Game.gameEndReason.unknown.abortedCourtesy.white = Game courtest-aborted by {0}.
Game.gameEndReason.unknown.abortedCourtesy.black = Game courtest-aborted by {1}.
Game.gameEndReason.unknown.abortedAdmin = Game aborted by an administrator.
Game.gameEndReason.unknown.abortedTooShort = Game aborted because it is too short.
Game.gameEndReason.unknown.abortPartnerDisconnected = Game aborted when one of the player's partner disconnected.
Game.gameEndReason.unknown.abortPartnerDisconnected.white = Game aborted when {0}'s partner disconnected.
Game.gameEndReason.unknown.abortPartnerDisconnected.black = Game aborted when {1}'s partner disconnected.

